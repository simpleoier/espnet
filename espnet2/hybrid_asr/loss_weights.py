import torch

idx_to_vq_min=[
    71,
    58,
    59,
    230,
    450,
    170,
    470,
    223,
    308,
    41,
    449,
    161,
    200,
    93,
    290,
    455,
    341,
    115,
    350,
    399,
    224,
    202,
    459,
    442,
    56,
    490,
    447,
    334,
    386,
    292,
    126,
    497,
    287,
    394,
    359,
    502,
    452,
    66,
    397,
    139,
    361,
    241,
    239,
    357,
    250,
    242,
    152,
    340,
    29,
    280,
    358,
    231,
    256,
    210,
    14,
    351,
    124,
    62,
    57,
    8,
    229,
    203,
    155,
    323,
    503,
    360,
    326,
    464,
    325,
    19,
    267,
    412,
    38,
    389,
    298,
    286,
    150,
    103,
    402,
    303,
    100,
    262,
    40,
    377,
    339,
    272,
    387,
    27,
    393,
    174,
    81,
    432,
    252,
    9,
    419,
    396,
    141,
    183,
    0,
    79,
    26,
    436,
    138,
    479,
    279,
    205,
    466,
    478,
    410,
    77,
    133,
    353,
    95,
]

idx_to_vq_max=[
    71,
    58,
    59,
    230,
    450,
    170,
    470,
    223,
    308,
    41,
    449,
    200,
    161,
    93,
    290,
    341,
    115,
    455,
    399,
    350,
    202,
    459,
    224,
    442,
    490,
    447,
    386,
    334,
    287,
    56,
    292,
    497,
    359,
    502,
    126,
    394,
    452,
    139,
    361,
    397,
    66,
    239,
    357,
    241,
    250,
    242,
    280,
    152,
    231,
    358,
    29,
    340,
    210,
    124,
    62,
    8,
    351,
    256,
    155,
    14,
    57,
    19,
    203,
    229,
    464,
    503,
    326,
    267,
    360,
    323,
    412,
    325,
    150,
    38,
    298,
    389,
    103,
    262,
    303,
    286,
    40,
    272,
    402,
    377,
    100,
    387,
    339,
    27,
    393,
    174,
    81,
    432,
    252,
    9,
    419,
    396,
    141,
    183,
    0,
    79,
    436,
    26,
    138,
    479,
    205,
    279,
    466,
    478,
    410,
    77,
    133,
    353,
    324,
    268,
    95,
    42
]

idx_to_vq = idx_to_vq_max

label_samples=[
    10888174,
    4239994,
    3764906,
    2832657,
    2355986,
    1407264,
    1465425,
    1283446,
    1309389,
    1198724,
    1076269,
    838217,
    770442,
    746908,
    675613,
    602303,
    599189,
    666542,
    564322,
    563007,
    491817,
    502596,
    573153,
    504542,
    489471,
    483707,
    443495,
    458990,
    417451,
    488922,
    395639,
    435645,
    420558,
    421057,
    454435,
    417093,
    394462,
    369486,
    370035,
    344336,
    373462,
    355162,
    337502,
    310203,
    322019,
    331866,
    280456,
    325277,
    278009,
    314916,
    314502,
    309215,
    271945,
    279476,
    268366,
    273357,
    282746,
    291919,
    277133,
    288849,
    280442,
    260575,
    278289,
    263387,
    260539,
    276940,
    265651,
    266467,
    268625,
    265779,
    259352,
    264321,
    233377,
    248513,
    249558,
    247734,
    238930,
    237114,
    237972,
    227185,
    233741,
    226440,
    230379,
    228354,
    223397,
    215155,
    218371,
    211654,
    216080,
    212899,
    208194,
    195754,
    190549,
    187444,
    177319,
    153806,
    145137,
    125141,
    124866,
    119975,
    104381,
    100514,
    84695,
    40134,
    21981,
    22182,
    8175,
    758,
    69,
    66,
    28,
    4,
    1,
    1,
    1,
    1,
]


# option 1: just give some specific weights
# normedWeights = [1 (x / sum(label_samples)) for x in label_samples]
# normedWeights[0:3] = [0.05, 0.08, 0.1]
# print('weights:', normedWeights)

# option 2: (log2(x+100)) ** 2  
normedWeights = torch.FloatTensor(label_samples)
normedWeights = torch.log2(normedWeights + 100)
normedWeights = normedWeights * normedWeights
normedWeights = 1 / (normedWeights / normedWeights.sum())
normedWeights = 100 * normedWeights / normedWeights.sum()

# print('weights:', normedWeights)

idx_to_vq_chime4 = [
    243,
    445,
    67,
    464,
    273,
    401,
    424,
    265,
    35,
    100,
    423,
    447,
    385,
    292,
    498,
    289,
    400,
    505,
    407,
    374,
    330,
    282,
    33,
    45,
    441,
    208,
    75,
    402,
    457,
    52,
    246,
    233,
    2,
    329,
    158,
    135,
    147,
    211,
    102,
    239,
    224,
    65,
    285,
    428,
    299,
    414,
    168,
    481,
    186,
    263,
    199,
    32,
    396,
    161,
    104,
    495,
    300,
    386,
    203,
    98,
    260,
    170,
    404,
    99,
    30,
    215,
    264,
    255,
    169,
    394,
    392,
    456,
    163,
    295,
    465,
    205,
    190,
    123,
    38,
    360,
    143,
    73,
    9,
    283,
    197,
    364,
    449,
    195,
    296,
    112,
    66,
    223,
    504,
    279,
    92,
    202,
    322,
    267,
    371,
    142,
    439,
    244,
    122,
    324,
    461,
    391,
    420,
    254,
    418,
    74,
    232,
    207,
    93,
    476,
    80,
    126,
    478,
    507,
    51,
    500,
    252,
    108,
    502,
    68,
    389,
    191,
    511,
    301,
    297,
    6,
    443,
    29,
    3,
    326,
    130,
    115,
    339,
    413,
    290,
    496,
    82,
    362,
    410,
    192,
    58,
    317,
    144,
    95,
    5,
    491,
    318,
    204,
    79,
    206,
    7,
    53,
    46,
    54,
]

label_samples_chime4 = [
    15059604,
    14145744,
    10233150,
    10172856,
    9092322,
    8319450,
    6937164,
    6363966,
    5160630,
    5138196,
    4929162,
    4822764,
    4226022,
    4189410,
    4031304,
    3698264,
    3641618,
    3380824,
    3292974,
    3282822,
    3208026,
    3130994,
    3084096,
    3041916,
    2921832,
    2920602,
    2852358,
    2667906,
    2585364,
    2543500,
    2382864,
    2352498,
    2154636,
    2139606,
    2016264,
    2005736,
    1990098,
    1949958,
    1847906,
    1790736,
    1767060,
    1762224,
    1759698,
    1691616,
    1605080,
    1554152,
    1543758,
    1507950,
    1329306,
    1191726,
    1130160,
    903996,
    857856,
    740598,
    704856,
    667716,
    616228,
    481296,
    437864,
    234516,
    216202,
    198348,
    180276,
    167060,
    156680,
    120008,
    118028,
    112008,
    110312,
    106400,
    104492,
    104068,
    99184,
    97056,
    93416,
    91428,
    90704,
    87612,
    86044,
    85244,
    84860,
    83832,
    83820,
    80304,
    79892,
    79716,
    77748,
    77432,
    76684,
    71960,
    71864,
    70132,
    68656,
    65052,
    62632,
    62364,
    61680,
    61536,
    61092,
    61008,
    59104,
    57724,
    57596,
    57276,
    56036,
    56032,
    55284,
    53412,
    52928,
    52268,
    52068,
    51768,
    51204,
    51112,
    51088,
    49356,
    48520,
    48336,
    46764,
    46704,
    44616,
    43672,
    43204,
    41444,
    39700,
    38778,
    37252,
    36932,
    34236,
    33872,
    33112,
    32976,
    31816,
    29184,
    25908,
    25316,
    25180,
    24812,
    23828,
    23268,
    19712,
    19664,
    18260,
    15332,
    13348,
    13092,
    12414,
    11912,
    11796,
    8036,
    1496,
    464,
    252,
    32,
    18,
    8,
    8,
    6,
]

normedWeights_chime4 = torch.FloatTensor(label_samples)
normedWeights_chime4 = torch.log2(normedWeights_chime4 + 100)
normedWeights_chime4 = normedWeights_chime4 * normedWeights_chime4
normedWeights_chime4 = 1 / (normedWeights_chime4 / normedWeights_chime4.sum())
normedWeights_chime4 = 100 * normedWeights_chime4 / normedWeights_chime4.sum()